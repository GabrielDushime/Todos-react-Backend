{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Gabriel's ToDo App Using React Js-Redux",
      "description": "API documentation for Todo App "
    },
    "tags": [
        {
          "name": "users CRUD",
          "description": "Endpoints for users CRUD operations"
        }
      ],
    "basePath": "/",
 
    "paths": {
       
      "/api/users": {
       
        "post": {
            "tags": ["User-Crud"],
          "summary": "Create a new user",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User object",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User created successfully"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        },
        "get": {
            "tags": ["User-Crud"],
          "summary": "Get all users",
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "List of users"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/api/users/{id}": {
        
        "get": {
            "tags": ["User-Crud"],
          "summary": "Get user by ID",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "number",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "User found"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
            "tags": ["User-Crud"],
          "summary": "Update user by ID",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "number",
              "required": true
            },
            {
              "in": "body",
              "name": "body",
              "description": "User object",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User updated successfully"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        },
        "delete": { 
        "summary": "Delete user by ID",
        "tags": ["User-Crud"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "number",
            "required": true,
            "description": "ID of the user to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
      }
    }
  }
  